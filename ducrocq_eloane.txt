#1 
SELECT titre AS 'Titres films' 
FROM film 
WHERE id BETWEEN 1 AND 3
AND titre LIKE '%e' 

#2
SELECT titre AS titre_film, duree_min AS duree_film, resum AS resume_film FROM film

#3
SELECT LOWER(titre) AS titres_min FROM film WHERE id< 42 OR id>84;

#4 
SELECT UPPER(titre) AS titre, date_fin_affiche
FROM film
ORDER BY date_fin_affiche DESC

#5
SELECT SHA1(titre) AS Titres_SHA1, MD5(titre) AS Titres_MD5
FROM film

#6
SELECT COUNT(titre) AS nombre_films
FROM film
WHERE titre LIKE 'b%'

#7
SELECT titre
FROM film
WHERE LOWER(titre) 
LIKE '%the%' AND genre_id = 2

#8
SELECT titre, date_debut_affiche AS date_debut, distrib_id, nom AS nom_distrib
FROM film
JOIN distrib ON film.distrib_id = distrib.id
WHERE LOWER(titre) LIKE '%day%'
ORDER BY date_fin_affiche DESC

#9
SELECT genre.nom AS "nom genre", COUNT(*) AS "nombre films",SUM(film.duree_min) AS "minutes totales"
FROM genre
JOIN film ON film.genre_id = genre.id 
WHERE film.genre_id >= 3 AND  film.genre_id <= 5
GROUP BY genre.id

#10
SELECT MIN(film.id) as 'min id film'
FROM film
JOIN genre ON genre.id = film.genre_id
WHERE genre.id = 6

#11
SELECT titre,date_debut_affiche,date_fin_affiche,
DATEDIFF(date_fin_affiche, date_debut_affiche)*24 AS temps_affiche
FROM film
WHERE date_debut_affiche IS NOT NULL AND date_fin_affiche IS NOT NULL;

#12
SELECT (SELECT count(*) FROM abonnement WHERE abonnement.id BETWEEN 1 AND 4) AS "nombre_abonnement", CEIL(AVG(prix)) AS moyenne_abonnement,COUNT(membre.id) AS nombre_abonnes
FROM abonnement
INNER JOIN membre
ON abonnement.id = membre.abo_id AND
membre.abo_id BETWEEN 1 AND 4

#13
SELECT nom, pourcentage_reduc
FROM reduction
WHERE pourcentage_reduc > 0 AND pourcentage_reduc != 25
ORDER BY pourcentage_reduc DESC

#14
SELECT nom_salle
FROM salle
WHERE ( nbr_siege >= 100 AND nbr_siege <= 300 ) AND etage_salle	= 2

#15
SELECT genre.nom AS nom_genre, MAX(film.duree_min)
FROM genre
JOIN film ON film.genre_id = genre.id 
GROUP BY genre.id
﻿

#16
SELECT SUM(nbr_siege) AS "nbr place"
FROM salle
WHERE etage_salle = 1

#17
SELECT membre_id, date
FROM historique_membre
WHERE film_id = 453 OR film_id = 642
ORDER BY membre_id ASC;

#18
1: Select id, titre, resum FROM film WHERE id = 42;
car avec le where les lignes sont filtres au fur et a mesure de la lecture alors que avec le having necessite de lire toutes les lignes avant de proceder au filtrage 

#19
SELECT UPPER(distrib.nom) AS nom_distrib, COUNT(distrib.id) AS nombre_films, SUM(film.duree_min) AS duree_min
from distrib
JOIN film ON distrib.id = film.distrib_id
GROUP BY distrib.id, distrib.nom
ORDER BY nombre_films DESC, duree_min DESC

#20
SELECT CONCAT(UPPER(LEFT(fiche_personne.nom, 1)), LOWER(SUBSTRING(fiche_personne.nom, 2))) AS nom, 
CONCAT(UPPER(LEFT(fiche_personne.prenom, 1)), LOWER(SUBSTRING(fiche_personne.prenom, 2))) AS prenom, 
COUNT(membre.dernier_film_id) AS nombre_film, membre.date_dernier_film AS date_dernier_film, film.titre AS nom_dernier_film
FROM fiche_personne JOIN membre ON fiche_personne.id = membre.id
LEFT JOIN film ON membre.dernier_film_id = film.idWHERE membre.dernier_film_id IS NOT NULL
GROUP BY fiche_personne.id, fiche_personne.nom, fiche_personne.prenom, membre.date_dernier_film, film.titre
ORDER BY nombre_film DESC 

RENDU /  20 requests git links
ducrocq eloane
